# bot.py

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∏ –∫–ª–∞—Å—Å—ã –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `python-telegram-bot`
from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ—Ä–≥–æ–≤
from database import init_db, add_user, get_user, update_balance, process_trade, withdraw_funds, win, lose, dep_balance

from admin_commands import admin_add_balance, admin_verify_user, admin_set_balance

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
import random

# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
import requests

import logging

import asyncio

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
from config import BOT_TOKEN

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
init_db()

active_tasks = {}

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
def get_crypto_price(symbol):
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={symbol}&vs_currencies=usd"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        return data[symbol]['usd']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ {symbol}: {e}")
        return None


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start
    user = update.effective_user
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –µ—â–µ –Ω–µ—Ç
    add_user(user.id, user.username)

    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫ (Reply Keyboard) –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    reply_keyboard = [
        ["üíº –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç", "üî∑ –û —Å–µ—Ä–≤–∏—Å–µ"],
        ["üßëüèª‚Äçüíª –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "üìä –û–ø—Ü–∏–æ–Ω—ã"]
    ]
    reply_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.username}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text = update.message.text
    user_id = update.message.from_user.id

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if text in ("üíº –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"):
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        user = get_user(user_id)
        if user:
            # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
            image = "./assets/project-1.jpg"

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            verification_status = "‚úÖ" if user[8] else "‚ùå"

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            caption = (
                f"üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n\n"
                f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                f"üìë –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {verification_status}\n"
                f"üóÑ ID: {user[0]}\n"
                f"üíµ –ë–∞–ª–∞–Ω—Å: {user[2]}‚ÇΩ\n"
                f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                f"‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
                f"‚îè –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ: {user[3]}\n"
                f"‚î£ –ù–µ—É–¥–∞—á–Ω—ã—Ö: {user[5]}\n"
                f"‚î£ –£–¥–∞—á–Ω—ã—Ö: {user[4]}\n"
                f"‚îó –í—ã–≤–æ–¥–æ–≤ —Å–æ–≤–µ—Ä—à–µ–Ω–æ {user[6]} –Ω–∞ —Å—É–º–º—É {user[7]}‚ÇΩ\n"
                f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
                f"_–û—Ç–∫—Ä–æ–π—Ç–µ –¥–≤–µ—Ä–∏ –≤ –º–∏—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤–º–µ—Å—Ç–µ —Å CoinWizard - –í–∞—à–∏–º –≤–µ—Ä–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ –æ–Ω–ª–∞–π–Ω —Ç—Ä–µ–π–¥–∏–Ω–≥–µ –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö._"
            )

            # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="replenish"), InlineKeyboardButton("üè¶ –í—ã–≤–µ—Å—Ç–∏", callback_data="withdraw")],
                [InlineKeyboardButton("üóÉ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è", callback_data="verify"), InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
                [InlineKeyboardButton("–ú–æ–∏ –∞–∫—Ç–∏–≤—ã", callback_data="my_assets")]
            ])

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=image,
                caption=caption,
                parse_mode="Markdown",
                reply_markup=keyboard
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await update.message.reply_text("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")


    elif text == "üî∑ –û —Å–µ—Ä–≤–∏—Å–µ":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ—Ä–≤–∏—Å–µ
        service_text = (
            "*CoinWizard* - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π –∏ —Ñ—å—é—á–µ—Ä—Å–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏.\n\n"
            "üîπ *–í–µ–¥—É—â–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏*\n"
            "‚îó –ú—ã –Ω–µ —Å—Ç–æ–∏–º –Ω–∞ –º–µ—Å—Ç–µ –∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –¥–µ–ª–∞–µ—Ç –Ω–∞—Å –ª–∏–¥–µ—Ä–∞–º–∏ –æ—Ç—Ä–∞—Å–ª–∏.\n\n"
            "üîπ *–õ–æ—è–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤*\n"
            "‚îó –î–æ—Å—Ç—É–ø–Ω–∞—è –∫–∞–∂–¥–æ–º—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–µ–π–¥–µ—Ä–æ–º. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∑–∞ —Å—á–µ—Ç –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç–∏ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –æ–∫–∞–∑–∞–Ω–∏—è –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã—Ö —É—Å–ª—É–≥.\n\n"
            "üîπ *–û–±—â–∏–π —É—Å–ø–µ—Ö*\n"
            "‚îó –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –ø—Ä–æ—Å—Ç—É—é –∏ –¥–æ—Å—Ç—É–ø–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –∏ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ.\n\n"
            "–ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ—Å—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É *CoinWizard* –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤. –ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ª–µ–≥–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –∫–∞–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö, —Ç–∞–∫ –∏ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤."
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üìñ –£—Å–ª–æ–≤–∏—è", callback_data="service_terms"), InlineKeyboardButton("üìú –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", callback_data="service_certificate")],
            [InlineKeyboardButton("–ì–∞—Ä–∞–Ω—Ç–∏—è —Å–µ—Ä–≤–∏—Å–∞", callback_data="service_guarantee"), InlineKeyboardButton("üìà –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏", callback_data="service_network")],
            [InlineKeyboardButton("‚öôÔ∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data="service_referral")]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await update.message.reply_text(service_text, reply_markup=keyboard, parse_mode="Markdown")
        
    elif text == "üßëüèª‚Äçüíª –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
        support_text = (
            "üìò –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ CoinWizard. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.\n"
            "–î–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –æ–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ—Ç–∫–æ. "
            "–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –∏ —Ç.–¥.)\n\n"
            "–ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É:\n\n"
            "1. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏.\n"
            "2. –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –Ω–æ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.\n"
            "3. –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ, –≤ —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –í–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞.\n"
            "4. –ü—Ä–∏—à–ª–∏—Ç–µ –í–∞—à ID –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞, –¥–∞–±—ã —É—Å–∫–æ—Ä–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.\n"
            "5. –û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º. –ù–µ –≥—Ä—É–±–∏—Ç–µ –µ–º—É –∏ –Ω–µ –¥–µ—Ä–∑–∏—Ç–µ, –µ—Å–ª–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ —Å–∫–æ—Ä–µ–π—à–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –í–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞."
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —á–∞—Ç —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üì© –ù–∞–ø–∏—Å–∞—Ç—å", url="https://t.me/durov")] # –ü–æ–º–µ–Ω—è–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
        await update.message.reply_text(support_text, reply_markup=keyboard)

    elif text == "üìä –û–ø—Ü–∏–æ–Ω—ã":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –æ–ø—Ü–∏–æ–Ω–∞—Ö
        options_text = (
            "_–û–ø—Ü–∏–æ–Ω—ã - —ç—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä—É –ø—Ä–∞–≤–æ, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∞–∫—Ç–∏–≤–æ–≤ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±—É–¥—É—â–µ–º.\n\n_"
            "*üí† –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω–µ—Ç—É –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤:*"
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("BTC", callback_data="option_btc"), InlineKeyboardButton("ETH", callback_data="option_eth")],
            [InlineKeyboardButton("BNB", callback_data="option_bnb"), InlineKeyboardButton("XRP", callback_data="option_xrp")],
            [InlineKeyboardButton("ADA", callback_data="option_ada"), InlineKeyboardButton("SOL", callback_data="option_sol")],
            [InlineKeyboardButton("DOGE", callback_data="option_doge"), InlineKeyboardButton("DOT", callback_data="option_dot")],
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await update.message.reply_text(options_text, reply_markup=keyboard, parse_mode="Markdown")
        
    elif context.user_data.get("awaiting_withdrawal"):
        try:
            amount = float(text)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ
            if amount < 1000:
                await update.message.reply_text("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 1000‚ÇΩ.")
            else:
                # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
                success = withdraw_funds(user_id, amount)
                if success:
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–≤–æ–¥–µ
                    await update.message.reply_text(f"‚úÖ –í—ã–≤–æ–¥ {amount}‚ÇΩ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                else:
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                    await update.message.reply_text("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.")
                    
        except ValueError:
            await update.message.reply_text("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞"
        context.user_data["awaiting_withdrawal"] = False
        return  # –í–∞–∂–Ω–æ: –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–∏–º —É—Å–ª–æ–≤–∏—è–º

    elif context.user_data.get("state") == "WAITING_FOR_AMOUNT":
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            amount = float(update.message.text)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É
            if amount < 5000:
                await update.message.reply_text("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 5000 —Ä—É–±. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            elif amount <= 0:
                await update.message.reply_text("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_id = update.effective_user.id
                dep_balance(user_id, amount)
                
                # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                user_info = get_user(user_id)
                await update.message.reply_text(
                    f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount:.2f} —Ä—É–±.\n"
                    f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_info[2]:.2f} —Ä—É–±."
                )
                context.user_data["state"] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

    elif context.user_data.get("state") == "WAITING_FOR_INVESTMENT":
        await process_investment_amount(update, context)
        return
    
    elif context.user_data.get("state") == "WAITING_FOR_DIRECTION":
        await handle_graph_direction(update, context)
        return
    
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ü–∏—é
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π.")
        

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback-–∑–∞–ø—Ä–æ—Å–∞
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback-–∑–∞–ø—Ä–æ—Å–∞
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ callback_data
    if query.data == "replenish":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        text = "üí≥ *–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:*"
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É", callback_data="deposit_card")],
            [InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π", callback_data="deposit_crypto")],
            [InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="deposit_promo")]
        ])
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await query.edit_message_caption(caption=text, reply_markup=keyboard, parse_mode="Markdown")

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç—É"
    elif query.data == "deposit_card":
        # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        await query.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–º–∏–Ω–∏–º—É–º 5.000‚ÇΩ):"
        )
        context.user_data["state"] = "WAITING_FOR_AMOUNT"  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã

    elif query.data == "deposit_crypto":
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π
        amount = random.randint(100000, 300000)
        update_balance(user_id, amount)
        user = get_user(user_id)

        if user:
            text = (
                f"üíµ *–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!*\n\n"
                f"–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω–æ {amount}‚ÇΩ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π.\n"
                f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user[2]}‚ÇΩ."
            )
        else:
            text = "‚ùå *–û—à–∏–±–∫–∞:* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        await query.edit_message_caption(caption=text, parse_mode="Markdown")

    elif query.data == "deposit_promo":
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞
        text = "üéüÔ∏è *–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:*\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞."
        await query.edit_message_caption(caption=text, parse_mode="Markdown")
        
    elif query.data == "my_assets":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–∏—Ö –∞–∫—Ç–∏–≤–∞—Ö
        text = (
            "üíº *–ê–∫—Ç–∏–≤—ã:*\n\n"
            "–ê–∫—Ç–∏–≤—ã - —ç—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–π–¥–µ—Ä—ã –ø–æ–∫—É–ø–∞—é—Ç –∏–ª–∏ –ø—Ä–æ–¥–∞—é—Ç –Ω–∞ —Ä—ã–Ω–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏. "
            "–≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –≤–∫–ª—é—á–∞—è –∞–∫—Ü–∏–∏, –≤–∞–ª—é—Ç—ã, —Å—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã, –æ–±–ª–∏–≥–∞—Ü–∏–∏, –æ–ø—Ü–∏–æ–Ω—ã –∏ –¥—Ä—É–≥–∏–µ.\n\n"
            "üóÑ *–ê–∫—Ç–∏–≤—ã:*\n"
            "‚îè BTC: 0.0\n"
            "‚î£ ETH: 0.0\n"
            "‚î£ USDT: 0.0\n"
            "‚î£ SHIB: 0.0\n"
            "‚îó ATOM: 0.0"
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞–º–∏
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–∫—É–ø–∫–∞", callback_data="buy_assets"), InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞", callback_data="sell_assets")],
            [InlineKeyboardButton("–¢—Ä–µ–π–¥", callback_data="trade_assets")]
        ])

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await query.edit_message_caption(caption=text, reply_markup=keyboard, parse_mode="Markdown")
        
    elif query.data == "buy_assets":
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –∞–∫—Ç–∏–≤–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
        text = "üõí *–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:*\nBTC, ETH, USDT, SHIB, ATOM."
        await query.edit_message_caption(caption=text, parse_mode="Markdown")

    elif query.data == "sell_assets":
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –∞–∫—Ç–∏–≤–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
        text = "üí∞ *–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏:*\nBTC, ETH, USDT, SHIB, ATOM."
        await query.edit_message_caption(caption=text, parse_mode="Markdown")

    elif query.data == "trade_assets":
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–µ–π–¥ –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        success, amount = process_trade(user_id)
        user = get_user(user_id)

        if success:
            text = (
                f"‚úÖ *–£–¥–∞—á–Ω—ã–π —Ç—Ä–µ–π–¥!*\n\n"
                f"–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {amount}‚ÇΩ.\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: {user[2]}‚ÇΩ."
            )
        else:
            text = (
                f"‚ùå *–ù–µ—É–¥–∞—á–Ω—ã–π —Ç—Ä–µ–π–¥!*\n\n"
                f"–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {amount}‚ÇΩ.\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: {user[2]}‚ÇΩ."
            )

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∞–∫—Ç–∏–≤–∞–º
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="my_assets")],
        ])

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç—Ä–µ–π–¥–∞ –∏ –∫–Ω–æ–ø–∫–æ–π
        await query.edit_message_caption(caption=text, reply_markup=keyboard, parse_mode="Markdown")
    
    elif query.data == "withdraw":
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = get_user(user_id)
        if user:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞
            text = (
                f"üí∏ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞:\n\n"
                f"–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {user[2]}‚ÇΩ\n"
                f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 1000‚ÇΩ"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É "‚ùå –û—Ç–º–µ–Ω–∞"
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_withdrawal")]
            ])

            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
            await query.edit_message_caption(
                caption=text,
                reply_markup=keyboard,
                parse_mode="Markdown"
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞"
            context.user_data["awaiting_withdrawal"] = True
    
    
    elif query.data == "cancel_withdrawal":
    # –û—Ç–º–µ–Ω—è–µ–º –≤—ã–≤–æ–¥
        await query.edit_message_caption(
            caption="‚úÖ –í—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω.",
            parse_mode="Markdown"
        )

        # –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞"
        if "awaiting_withdrawal" in context.user_data:
            del context.user_data["awaiting_withdrawal"]
            
    elif query.data.startswith("update_course_"):
        crypto_symbol = query.data.split("_")[-1]
        crypto_name = crypto_symbol.upper()  # –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–º–µ–Ω–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–Ω–µ—Ç—ã
        await handle_crypto_option(update, context, crypto_symbol, crypto_name)
        
    elif query.data == "cancel_crypto_option":
        await query.edit_message_text("‚úÖ –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–æ–Ω–æ–≤.")
            
    elif query.data == "option_btc":
        await handle_crypto_option(update, context, "bitcoin", "BITCOIN")
        
    elif query.data == "option_eth":
        await handle_crypto_option(update, context, "ethereum", "ETHEREUM")
        
    elif query.data == "verify":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        text = (
            "ü§∑üèª‚Äç‚ôÄÔ∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –í–∞–º –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞. "
            "–í—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞–ø–∏—Å–∞–≤ '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è' –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
            "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –æ–±–ª–∞–¥–∞—é—Ç —Ä—è–¥–æ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –Ω–∞–¥ –æ–±—ã—á–Ω—ã–º–∏. –°—Ä–µ–¥–∏ –Ω–∏—Ö:\n\n"
            "üî∑ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É.\n\n"
            "üî∑ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.\n\n"
            "üî∑ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å—á–µ—Ç—É –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö.\n\n"
            "üî∑ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–≥–µ–Ω—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏; –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à–∞–Ω—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–≤–∏–¥—É –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", url="https://t.me/durov")] # –ü–æ–º–µ–Ω—è–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç
        ])

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
        await query.edit_message_caption(caption=text, reply_markup=keyboard, parse_mode="Markdown")
        
    elif query.data == "service_certificate":
    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        certificate_image = "./assets/fake_certificate.jpg"  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô", callback_data="delete_message")]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=certificate_image,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    elif query.data == "service_guarantee":
        text = (u"üîπ *CoinWizard* - –æ–Ω–ª–∞–π–Ω-–±–∏—Ä–∂–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è —É—Å–ª—É–≥–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –æ–ø—Ü–∏–æ–Ω–∞–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.\n\n"
            u"_–í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –≤ –ª—é–±–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ñ–µ—Ä–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Ä–∏—Å–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ —Ç–æ—Ä–≥–æ–≤–ª–µ–π. –ü–æ—ç—Ç–æ–º—É –Ω–∏–∫–∞–∫–∞—è –±–∏—Ä–∂–∞ –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –¥–∞—Ç—å –ø–æ–ª–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–∏–±—ã–ª–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–∏—Å–∫–æ–≤. –¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, CoinWizard –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö —É—Å–ª—É–≥._\n\n"
            "*–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å CoinWizard, –≤–∫–ª—é—á–∞—é—Ç –≤ —Å–µ–±—è:*\n\n"
            "üîí *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤:* CoinWizard –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–∞—Ö, –æ—Ç–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∫–æ–º–ø–∞–Ω–∏–∏. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∏—Å–∫–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ–º –±–∏—Ä–∂–∏.\n\n"
            "‚öôÔ∏è *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:* CoinWizard –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –∑–∞—â–∏—Ç—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n"
            "üåê *–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å:* CoinWizard –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∫–æ–º–∏—Å—Å–∏—è—Ö, –ø—Ä–∞–≤–∏–ª–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–≤–æ–∏ —Å—á–µ—Ç–∞.\n\n"
            "ü¶πüèº‚Äç‚ôÇÔ∏è *–û–±—É—á–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞:* CoinWizard –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–≤–æ–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º, –ø–æ–º–æ–≥–∞—è –∏–º —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ.\n\n"
            "üì≤ *–£–¥–æ–±—Å—Ç–≤–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:* CoinWizard –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—É—é –∏ –ø—Ä–æ—Å—Ç—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤.\n\n"
            "‚úÖ *Gembell Limited* (–∫–æ–º–ø–∞–Ω–∏—è, –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —É—Å–ª—É–≥–∏ CoinWizard, —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è –¶–†–û–§–† (–ù–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏ TSRF RU 0395 AA Vv0207).\n\n"
            "–¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –Ω–∏–∫–∞–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –∏–ª–∏ –±–∏—Ä–∂–∞ –Ω–µ –º–æ–∂–µ—Ç –¥–∞—Ç—å 100%-—é –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏. –ü–æ—ç—Ç–æ–º—É, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —É—Å–ª–æ–≤–∏—è–º–∏ –±–∏—Ä–∂–∏ –∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∏—Å–∫–∏.")
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô", callback_data="delete_message")]
        ])
        
        await query.message.reply_text(text, reply_markup=keyboard, parse_mode="Markdown")
        
    elif query.data == "service_network":
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏"
        text = (
            "üìà –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏ Bitcoin\n\n"
            
            "–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å: üü¢\n"
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤: ‚âà 1\n"
            "–†–∞–∑–º–µ—Ä: 1.9 mB (1.4 mVB)\n"
            "–ù–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: 2301\n\n"
            
            "–ö–æ–º–∏—Å—Å–∏—è –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ –ø–µ—Ä–≤—ã–π –±–ª–æ–∫:\n"
            "–ú–∏–Ω–∏–º—É–º: 0.00003072 BTC / kVB\n"
            "–ú–µ–¥–∏–∞–Ω–∞: 0.00004096 BTC / kVB\n"
        )
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô", callback_data="delete_message")]
        ])
        
        await query.message.reply_text(text, reply_markup=keyboard, parse_mode="Markdown")        
        
    elif query.data == "delete_message":
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
        await query.message.delete()

    elif query.data == "graph_up":
        await handle_graph_direction(update, context)
        return
    
    elif query.data == "graph_stay":
        await handle_graph_direction(update, context)
        return
    
    elif query.data == "graph_down":
        await handle_graph_direction(update, context)
        return
    
    elif query.data == "time_10sec":
        await handle_investment_time(update, context)
        return
    
    elif query.data == "time_30sec":
        await handle_investment_time(update, context)
        return
    
    elif query.data == "time_1min":
        await handle_investment_time(update, context)
        return
        
    else:
        await query.edit_message_text(text="‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", parse_mode="Markdown")
        
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
async def handle_crypto_option(update: Update, context: ContextTypes.DEFAULT_TYPE, crypto_symbol, crypto_name):
    print("handle_crypto_option –≤—ã–∑–≤–∞–Ω")
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    price = get_crypto_price(crypto_symbol)
    user = get_user(user_id)

    if price is not None and user:
        context.user_data['crypto_symbol'] = crypto_symbol  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É
        context.user_data['crypto_name'] = crypto_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë –∏–º—è

        text = (
            f"\U0001F4C8 *{crypto_name} –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏*\n\n"
            f"\U0001F310 –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å.\n\n"
            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: 1000‚ÇΩ\n"
            f"–ö—É—Ä—Å {crypto_name}: {price}$\n\n"
            f"–í–∞—à –¥–µ–Ω–µ–∂–Ω—ã–π –±–∞–ª–∞–Ω—Å: {user[2]}‚ÇΩ"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("\U0001F504 –û–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å", callback_data=f"update_course_{crypto_symbol}")],
            [InlineKeyboardButton("\u274C –û—Ç–º–µ–Ω–∞", callback_data="cancel_crypto_option")]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await query.edit_message_text(text=text, reply_markup=keyboard, parse_mode="Markdown")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data['state'] = 'WAITING_FOR_INVESTMENT'
        logging.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {context.user_data['state']}")

    else:
        # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Å—É–º–º—ã
async def process_investment_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("process_investment_amount –≤—ã–∑–≤–∞–Ω")
    user_id = update.message.from_user.id
    user = get_user(user_id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if context.user_data.get('state') == 'WAITING_FOR_INVESTMENT' and user:
        try:
            amount = float(update.message.text)

            if amount < 1000:
                await update.message.reply_text("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1000‚ÇΩ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            elif amount > user[2]:  # user[2] ‚Äî –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await update.message.reply_text("‚ùå –°—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            else:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –≤ user_data –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                context.user_data['investment_amount'] = amount

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                text = (
                    f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏–æ–Ω {context.user_data['crypto_name']}\n"
                    f"–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: {amount}‚ÇΩ\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ –ø–æ–π–¥–µ—Ç –≥—Ä–∞—Ñ–∏–∫:"
                )

                # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
                keyboard = InlineKeyboardMarkup([
                    [InlineKeyboardButton("–í–≤–µ—Ä—Ö - —Ö2", callback_data="graph_up")],
                    [InlineKeyboardButton("–ù–∞ –º–µ—Å—Ç–µ - —Ö10", callback_data="graph_stay")],
                    [InlineKeyboardButton("–í–Ω–∏–∑ - —Ö2", callback_data="graph_down")]
                ])

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
                await update.message.reply_text(text, reply_markup=keyboard, parse_mode="Markdown")

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
                context.user_data['state'] = 'WAITING_FOR_DIRECTION'
                logging.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {context.user_data['state']}")
                logging.info(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {context.user_data}")

        except ValueError:
            await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
    else:
        await update.message.reply_text("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
async def handle_graph_direction(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info("handle_graph_direction –≤—ã–∑–≤–∞–Ω")
    logging.info(f"Callback data –ø–æ–ª—É—á–µ–Ω: {update.callback_query.data}")
    query = update.callback_query
    await query.answer()

    # –ö–∞—Ä—Ç–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≥—Ä–∞—Ñ–∏–∫–∞
    direction_map = {
        "graph_up": "–í–≤–µ—Ä—Ö - —Ö2",
        "graph_stay": "–ù–∞ –º–µ—Å—Ç–µ - —Ö10",
        "graph_down": "–í–Ω–∏–∑ - —Ö2"
    }

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑ callback_data
    direction = direction_map.get(query.data)
    if direction:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ context.user_data
        crypto_name = context.user_data.get('crypto_name')
        investment_amount = context.user_data.get('investment_amount')

        if not crypto_name or not investment_amount:
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –æ–ø—Ü–∏–æ–Ω–µ –∏–ª–∏ —Å—É–º–º–µ.")
            print("context.user_data:", context.user_data)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        context.user_data['graph_direction'] = direction

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        text = (
            f"‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–ø—Ü–∏–æ–Ω: {crypto_name}\n"
            f"–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: {investment_amount}‚ÇΩ\n"
            f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞: {direction}\n\n"
            f"–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("10 —Å–µ–∫", callback_data="time_10sec")],
            [InlineKeyboardButton("30 —Å–µ–∫", callback_data="time_30sec")],
            [InlineKeyboardButton("1 –º–∏–Ω", callback_data="time_1min")]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await query.edit_message_text(text=text, reply_markup=keyboard, parse_mode="Markdown")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
        context.user_data['state'] = 'WAITING_FOR_TIME'
        logging.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {context.user_data['state']}")

    else:
        # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞.")

async def handle_investment_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    time_map = {
        "time_10sec": 10,
        "time_30sec": 30,
        "time_1min": 60
    }

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    time_key = query.data
    investment_time = time_map.get(time_key)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    user_id = query.from_user.id
    crypto_name = context.user_data.get('crypto_name')
    investment_amount = context.user_data.get('investment_amount')
    direction = context.user_data.get('graph_direction')

    if not (crypto_name and investment_amount and direction and investment_time):
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if user_id in active_tasks:
        active_tasks[user_id].cancel()
        del active_tasks[user_id]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–π–º–µ—Ä–æ–º –∏ –≥—Ä–∞—Ñ–∏–∫–æ–º
    text = (
        f"‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–ø—Ü–∏–æ–Ω: {crypto_name}\n"
        f"–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: {investment_amount}‚ÇΩ\n"
        f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞: {direction}\n"
        f"–í—Ä–µ–º—è: {investment_time} —Å–µ–∫—É–Ω–¥\n\n"
        f"–ì—Ä–∞—Ñ–∏–∫: [–ù–∞—á–∞–ª–æ –∫–æ–ª–µ–±–∞–Ω–∏—è]"
    )
    await query.edit_message_text(text)

    async def run_game():
        try:
            # –≠–º—É–ª—è—Ü–∏—è —Ç–∞–π–º–µ—Ä–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∞
            for i in range(investment_time):
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–ª–µ–±–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
                movement = random.choice(["–í–≤–µ—Ä—Ö", "–ù–∞ –º–µ—Å—Ç–µ", "–í–Ω–∏–∑"])
                text = (
                    f"‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–ø—Ü–∏–æ–Ω: {crypto_name}\n"
                    f"–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: {investment_amount}‚ÇΩ\n"
                    f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞: {direction}\n"
                    f"–í—Ä–µ–º—è: {investment_time - i} —Å–µ–∫—É–Ω–¥\n\n"
                    f"–ì—Ä–∞—Ñ–∏–∫: {movement}"
                )
                await query.edit_message_text(text)
                await asyncio.sleep(1)

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            result = random.choice(["win", "lose"])
            multiplier = 2 if direction in ["–í–≤–µ—Ä—Ö - —Ö2", "–í–Ω–∏–∑ - —Ö2"] else 10

            if result == "win":
                winnings = investment_amount * multiplier
                win(user_id, winnings)
                result_text = (
                    f"üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n"
                    f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {winnings}‚ÇΩ\n"
                    f"–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {get_user(user_id)[2]}‚ÇΩ"
                )
            else:
                lose(user_id, investment_amount)
                result_text = (
                    f"üò¢ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.\n"
                    f"–°—É–º–º–∞ –ø–æ—Ç–µ—Ä–∏: {investment_amount}‚ÇΩ\n"
                    f"–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {get_user(user_id)[2]}‚ÇΩ"
                )
            await query.edit_message_text(result_text)

        except asyncio.CancelledError:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á–∏
            await query.edit_message_text("‚ùå –ò–≥—Ä–∞ –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            return

    # –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ—ë —Å—Å—ã–ª–∫–∏
    active_tasks[user_id] = asyncio.create_task(run_game())

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
    app = Application.builder().token(BOT_TOKEN).build()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥, —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(CallbackQueryHandler(get_crypto_price))
    app.add_handler(CallbackQueryHandler(handle_graph_direction, pattern="graph_.*"))
    app.add_handler(CallbackQueryHandler(handle_crypto_option, pattern="^update_course_|cancel_crypto_option$"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, process_investment_amount))
    app.add_handler(CallbackQueryHandler(handle_investment_time, pattern="time_.*"))
    app.add_handler(CommandHandler("add_balance", admin_add_balance))
    app.add_handler(CommandHandler("verify_user", admin_verify_user))
    app.add_handler(CommandHandler("set_balance", admin_set_balance))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling (–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
    app.run_polling()