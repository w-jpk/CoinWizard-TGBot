from telegram import Update
from telegram.ext import ContextTypes
from database import dep_balance, get_user, withdraw_funds
import sqlite3
import config

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
async def is_admin(user_id):
    admins = config.amd
    return user_id in admins

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
async def admin_add_balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not await is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        target_id = int(context.args[0])
        amount = float(context.args[1])
        dep_balance(target_id, amount)

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await update.message.reply_text(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {target_id} –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount}‚ÇΩ.")

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await context.bot.send_message(
                chat_id=target_id,
                text=(
                    f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount:.2f}‚ÇΩ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n"
                    f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å."
                )
            )
        except Exception as e:
            await update.message.reply_text(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_id}: {e}")

    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_balance <user_id> <amount>")

async def admin_withdraw_funds(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not await is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        target_id = int(context.args[0])
        amount = float(context.args[1])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞
        user = get_user(target_id)
        if not user or user[2] < amount:
            await update.message.reply_text("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.")
            return

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
        success = withdraw_funds(target_id, amount)

        if success:
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            await update.message.reply_text(f"‚úÖ –í—ã–≤–æ–¥ {amount}‚ÇΩ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_id} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.")

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await context.bot.send_message(
                    chat_id=target_id,
                    text=(
                        f"üí∏ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ù–∞ –≤–∞—à —Å—á–µ—Ç, –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ –ø–æ—Å—Ç—É–ø—è—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount:.2f}‚ÇΩ."
                    )
                )
            except Exception as e:
                await update.message.reply_text(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_id}: {e}")
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /withdraw_funds <user_id> <amount>")


# –ö–æ–º–∞–Ω–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
async def admin_verify_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not await is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        target_id = int(context.args[0])
        status = bool(int(context.args[1]))  # 0 –∏–ª–∏ 1
        conn = sqlite3.connect("bot.db")
        cursor = conn.cursor()

        cursor.execute('''
            UPDATE users SET verif = ? WHERE id = ?
        ''', (status, target_id))

        conn.commit()
        conn.close()

        status_text = "–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if status else "–Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
        await update.message.reply_text(f"‚úÖ –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {target_id} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {status_text}.")

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await context.bot.send_message(
                chat_id=target_id,
                text=(
                    f"üîî –í–∞—à —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–º–µ–Ω—ë–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n"
                    f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status_text}."
                )
            )
        except Exception as e:
            await update.message.reply_text(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_id}: {e}")

    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /verify_user <user_id> <status (0 –∏–ª–∏ 1)>")


# –ö–æ–º–∞–Ω–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–ø—Ä—è–º—É—é
async def admin_set_balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not await is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        target_id = int(context.args[0])
        new_balance = float(context.args[1])

        conn = sqlite3.connect("bot.db")
        cursor = conn.cursor()
        cursor.execute('''
            UPDATE users SET balance = ? WHERE id = ?
        ''', (new_balance, target_id))

        conn.commit()
        conn.close()

        await update.message.reply_text(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {target_id} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_balance}‚ÇΩ.")
    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_balance <user_id> <new_balance>")
